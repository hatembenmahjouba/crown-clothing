{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetechCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetechCollectionsStart","FETCH_COLLECTIONS_START"],"sources":["C:/crown-clothing/crown-clothing/src/redux/shop/shop.sagas.js"],"sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure,\r\n} from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('I am fired');\r\n  const collectionRef = firestore.collection('collections');\r\n  const snapshot = yield collectionRef.get();\r\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n\r\n  // collectionRef\r\n  //   .get()\r\n  //   .then((snapshot) => {\r\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\r\n  //   })\r\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetechCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;EACvC,MAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;EACA,MAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;EACA,MAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;EACA,MAAMC,cAAc,GAAG,MAAMb,IAAI,CAACE,+BAAD,EAAkCS,QAAlC,CAAjC,CAJuC,CAMvC;EACA;EACA;EACA;EACA;EACA;EACA;AACD;AAED,OAAO,UAAUG,sBAAV,GAAmC;EACxC,MAAMf,SAAS,CACbM,eAAe,CAACU,uBADH,EAEbT,qBAFa,CAAf;AAID"},"metadata":{},"sourceType":"module"}