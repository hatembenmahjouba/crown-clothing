{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"names":["takeLatest","put","call","all","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"sources":["C:/crown-clothing/crown-clothing/src/redux/user/user.sagas.js"],"sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport { signInSuccess, signInFailure } from './user.actions';\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n} from '../../firebase/firebase.utils';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;EACjD,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMV,IAAI,CAACO,yBAAD,EAA4BE,QAA5B,CAA1B;IACA,MAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;IACA,MAAMb,GAAG,CAACI,aAAa,CAAC;MAAEU,EAAE,EAAEF,YAAY,CAACE,EAAnB;MAAuB,GAAGF,YAAY,CAACG,IAAb;IAA1B,CAAD,CAAd,CAAT;EACD,CAJD,CAIE,OAAOC,KAAP,EAAc;IACd,MAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;EACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;EAClC,IAAI;IACF,MAAM;MAAEC;IAAF,IAAW,MAAMZ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CAAvB;IACA,MAAMI,OAAO,GAAG,MAAMV,IAAI,CAACO,yBAAD,EAA4BU,IAA5B,CAA1B;IACA,MAAMN,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;IACA,MAAMb,GAAG,CAACI,aAAa,CAAC;MAAEU,EAAE,EAAEF,YAAY,CAACE,EAAnB;MAAuB,GAAGF,YAAY,CAACG,IAAb;IAA1B,CAAD,CAAd,CAAT;EACD,CALD,CAKE,OAAOC,KAAP,EAAc;IACd,MAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;EACD;AACF;AAED,OAAO,UAAUI,eAAV,OAA4D;EAAA,IAAlC;IAAEC,OAAO,EAAE;MAAEC,KAAF;MAASC;IAAT;EAAX,CAAkC;;EACjE,IAAI;IACF,MAAM;MAAEL;IAAF,IAAW,MAAMZ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;IACA,MAAMZ,OAAO,GAAG,MAAMV,IAAI,CAACO,yBAAD,EAA4BU,IAA5B,CAA1B;IACA,MAAMN,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;IACA,MAAMb,GAAG,CAACI,aAAa,CAAC;MAAEU,EAAE,EAAEF,YAAY,CAACE,EAAnB;MAAuB,GAAGF,YAAY,CAACG,IAAb;IAA1B,CAAD,CAAd,CAAT;EACD,CALD,CAKE,OAAOC,KAAP,EAAc;IACd,MAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;EACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;EACrC,MAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUU,kBAAV,GAA+B;EACpC,MAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;EAC3B,MAAM3B,GAAG,CAAC,CAACD,IAAI,CAACwB,mBAAD,CAAL,EAA4BxB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACD"},"metadata":{},"sourceType":"module"}