{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nconst config = {\n  apiKey: 'AIzaSyBWhXJTnDf3VoH8HVjqv1HFYK1H_96a8d0',\n  authDomain: 'crown-db-755a2.firebaseapp.com',\n  projectId: 'crown-db-755a2',\n  storageBucket: 'crown-db-755a2.appspot.com',\n  messagingSenderId: '162344884939',\n  appId: '1:162344884939:web:cfb885d4e50fb7c111594e',\n  measurementId: 'G-K1JBTKCP6B'\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"sources":["C:/crown-clothing/crown-clothing/src/firebase/firebase.utils.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBWhXJTnDf3VoH8HVjqv1HFYK1H_96a8d0',\r\n  authDomain: 'crown-db-755a2.firebaseapp.com',\r\n  projectId: 'crown-db-755a2',\r\n  storageBucket: 'crown-db-755a2.appspot.com',\r\n  messagingSenderId: '162344884939',\r\n  appId: '1:162344884939:web:cfb885d4e50fb7c111594e',\r\n  measurementId: 'G-K1JBTKCP6B',\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\nexport const addCollectionAndDocuments = async (\r\n  collectionKey,\r\n  objectsToAdd\r\n) => {\r\n  const collectionRef = firestore.collection(collectionKey);\r\n\r\n  const batch = firestore.batch();\r\n  objectsToAdd.forEach((obj) => {\r\n    const newDocRef = collectionRef.doc();\r\n    batch.set(newDocRef, obj);\r\n  });\r\n\r\n  return await batch.commit();\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n  const transformedCollection = collections.docs.map((doc) => {\r\n    const { title, items } = doc.data();\r\n\r\n    return {\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items,\r\n    };\r\n  });\r\n  return transformedCollection.reduce((accumulator, collection) => {\r\n    accumulator[collection.title.toLowerCase()] = collection;\r\n    return accumulator;\r\n  }, {});\r\n};\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\nexport default firebase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}